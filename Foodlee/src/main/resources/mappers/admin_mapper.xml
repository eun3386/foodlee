<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IAdminDAO">
	
	<resultMap type="adminVO" id="adResultMap">
		<id property="adId" column="ad_id"/>
		<result property="login" column="login"/>
		<result property="password" column="password"/>
		<result property="email" column="email"/>
		<result property="phoneNumber" column="phoneNumber"/>
		<result property="notice" column="notice"/>
		<result property="createdAt" column="created_at"/>
		<result property="updatedAt" column="updated_at"/>
		<result property="loginTime" column="login_time"/>
		<result property="logoutTime" column="logout_time"/>
	</resultMap>
	
	<resultMap type="memberVO" id="mbResultMap">
		<id property="id" column="id"/> 
		<result property="type" column="type"/>
		<result property="login" column="login"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="gender" column="gender"/>
		<result property="age" column="age"/>
		<result property="residentRn" column="resident_rn"/>
		<result property="phoneNumber" column="phone_number"/>
		<result property="address" column="address"/>
		<result property="joinedAt" column="joined_at"/>
		<result property="updatedAt" column="updated_at"/>
		<result property="loginTime" column="login_time"/>
		<result property="logoutTime" column="logout_time"/>
	</resultMap>
	
	<resultMap type="sellerVO" id="sellerResultMap">
		<id property="sellerId" column="seller_id"/> 
		<result property="type" column="type"/>
		<result property="login" column="login"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="gender" column="gender"/>
		<result property="age" column="age"/>
		<result property="residentRn" column="resident_rn"/>
		<result property="phoneNumber" column="phone_number"/>
		<result property="address" column="address"/>
		<result property="joinedAt" column="joined_at"/>
		<result property="updatedAt" column="updated_at"/>
		<result property="companyRn" column="company_rn"/>
		<result property="loginTime" column="login_time"/>
		<result property="logoutTime" column="logout_time"/>
	</resultMap>
	
	<select id="admin_login_check" parameterType="adminVO" resultType="String">
		<![CDATA[
		select ad_id from admin where ad_id=#{adId} and password=#{password}
		]]>
	</select>
	
	<select id="select_admin" parameterType="String" resultType="adminVO">
		<![CDATA[
		select * from admin where login = #{login}
		]]>
	</select>
	
	<select id="admin_login_certification" parameterType="hashmap" resultType="map">
		<![CDATA[
		select login, cast(aes_decrypt(unhex(password), #{login}) as char(32) character set utf8) as password from foodlee_db.admin where ad_id = #{adId};
		]]>
	</select>
	
	<select id="select_admin_idby_login" parameterType="String" resultType="int">
		<![CDATA[
			select ad_id from admin where login = #{login}
		]]>
	</select>
	
	<select id="showAllMember" parameterType="memberVO" resultType="memberVO">
		<![CDATA[
			SELECT * FROM MEMBERS ORDER BY created_at desc
		]]>
	</select>
	
<!-- 	<select id="getSomething" parameterType="int" resultType="#package.#modelname"> -->
<!-- 		SELECT -->
<!-- 		columnname1, -->
<!-- 		columnname2, -->
<!-- 		columnname3 -->
<!-- 		FROM tablename1 -->
<!-- 		WHERE columnname1 = #{value} -->
<!-- 	</select> -->

<!-- 	<resultMap type="#modelname" id="YourResultSet"> -->
<!-- 		<id property="param1" column="columnname1" /> -->
<!-- 		<result property="param2" column="columnname2" /> -->
<!-- 		<result property="param3" column="columnname3" /> -->
<!-- 	</resultMap> -->

<!-- 	<select id="getAll" resultMap="YourResultSet"> -->
<!-- 		SELECT * FROM tablename1 -->
<!-- 	</select> -->

<!-- 	<insert id="insertSomething" parameterType="#modelname"> -->
<!-- 		INSERT INTO tablename1 (columnname1, columnname2, columnname3) -->
<!-- 		VALUES(#{value1},#{value2},#{value3}) -->
<!-- 	</insert> -->

<!-- 	<update id="updateSomething" parameterType="#modelname"> -->
<!-- 		UPDATE tablename1 -->
<!-- 		SET -->
<!-- 		columnname1=#{param1} -->
<!-- 		WHERE -->
<!-- 		columnname2 = #{param2} -->
<!-- 	</update> -->

<!-- 	<delete id="deleteSomething" parameterType="int"> -->
<!-- 		DELETE FROM tablename1 WHERE -->
<!-- 		columnname1 = #{param1} -->
<!-- 	</delete> -->
	<select id="SQL_SELECT_MEMBER_COUNT" resultType="int">
		<![CDATA[
			select count(*) from members where type != "admin"
			
		]]>
	</select>
	
	<select id="SQL_SELECT_SELLER_COUNT" resultType="int">
		<![CDATA[
			select count(*) from sellers
		]]>
	</select>
	
	<select id="SQL_SELECT_FOODTRUCK_COUNT" resultType="int">
		<![CDATA[
			select count(*) from foodtrucks
		]]>
	</select>
	
	<select id="SQL_SELECT_MENU_COUNT" resultType="int">
		<![CDATA[
			select count(*) from menus
		]]>
	</select>
	
	<select id="SQL_SELECT_TODAY_ORDER_COUNT" resultType="int">
		<![CDATA[
			SELECT count(*) FROM orders
				WHERE IFNULL(DATE_FORMAT(order_date, '%Y-%m-%d') = CURDATE(), 0);
		]]>
	</select>
	
	<select id="SQL_SELECT_TODAY_ORDER_PRICE_SUM" resultType="int">
		<![CDATA[
			SELECT IFNULL(sum(order_price_sum), 0) FROM orders
				WHERE DATE_FORMAT(order_date, '%Y-%m-%d') = CURDATE()
		]]>
	</select>
	
	<select id="SQL_SELECT_ORDER_COUNT" resultType="int">
		<![CDATA[
			select count(*) from orders
		]]>
	</select>
	
	<select id="SQL_SELECT_ORDER_PRICE_SUM" resultType="int">
		<![CDATA[
			select sum(order_price_sum) from orders
		]]>
	</select>
	
	<select id="SQL_SELECT_MENU_CATEGORYS" resultType="map">
		<![CDATA[
			select count(CASE WHEN menu_category=1 then 1 end) snack, count(CASE WHEN menu_category=2 then 1 end) meal,
			count(CASE WHEN menu_category=3 then 1 end) dessert, count(CASE WHEN menu_category=4 then 1 end) riceCar 
			from foodtrucks;
		]]>
	</select>
	
<!-- 	SELECT DATE_FORMAT(order_date,'%Y-%m') m, COUNT(*) c FROM orders GROUP BY m; -->
	<select id="SQL_SELECT_MONTH_ORDER_NUMBER" resultType="map">
		<![CDATA[
			select * from(
				select date_format(td.temp_date, '%Y-%m') m, count(o.order_date) c
				from tempdate td left join orders o on 
				(date_format(td.temp_date, '%Y-%m') = date_format(o.order_date, '%Y-%m'))
				group by m) a;
		]]>
	</select>
	
<!-- 	SELECT DATE_FORMAT(order_date,'%Y-%m') m, IFNULL(sum(order_price_sum), 0) as r FROM orders GROUP BY m; -->
	<select id="SQL_SELECT_MONTH_ORDER_PRICE_SUM" resultType="map">
		<![CDATA[
			select * from(
					select date_format(td.temp_date, '%Y-%m') m, IFNULL(sum(order_price_sum), 0) r
					from tempdate td left join orders o on 
					(date_format(td.temp_date, '%Y-%m') = date_format(o.order_date, '%Y-%m'))
					group by m) a;
		]]>
	</select>
	
	<select id="SQL_SELECT_ALL_MEMBERS" resultMap="mbResultMap">
		<![CDATA[
			SELECT * FROM MEMBERS where type != "admin"
		]]>
	</select>
	
	<select id="SQL_SELECT_ALL_SELLERS" resultMap="sellerResultMap">
		<![CDATA[
			select * from sellers;
		]]>
	</select>
	
	<select id="SQL_SELECT_LAST_LOGIN_DAY_MEMBERS" resultType="int">
		<![CDATA[
			select ifnull(TIMESTAMPDIFF(DAY, login_time, logout_time), 0) from members;
		]]>
	</select>
	
	<select id="SQL_SELECT_LAST_LOGIN_DAY_SELLERS" resultType="int">
		<![CDATA[
			select ifnull(TIMESTAMPDIFF(DAY, login_time, logout_time), 0) from sellers;
		]]>
	</select>
	
	<select id="SQL_SELECT_MEMBERS_GENDER" resultType="map">
		<![CDATA[
			select count(CASE WHEN gender="남" then 1 end) 남, count(CASE WHEN gender="여" then 1 end) 여
			from members where type != "admin";
		]]>
	</select>
	
	<select id="SQL_SELECT_SELLERS_GENDER" resultType="map">
		<![CDATA[
			select count(CASE WHEN gender="남" then 1 end) 남, count(CASE WHEN gender="여" then 1 end) 여 from sellers;
		]]>
	</select>
	
<!-- 	SELECT DATE_FORMAT(joined_at,'%Y-%m') m, COUNT(*) c FROM members GROUP BY m; -->
	<select id="SQL_SELECT_MONTH_MEMBERS_NUMBER" resultType="map">
		<![CDATA[
			select * from(
				select date_format(td.temp_date, '%Y-%m') m, count(mb.joined_at) c
				from tempdate td left join members mb on 
				(date_format(td.temp_date, '%Y-%m') = date_format(mb.joined_at, '%Y-%m'))
				group by m) a;
		]]>
	</select>
	
<!-- 	SELECT DATE_FORMAT(joined_at,'%Y-%m') m, COUNT(*) c FROM sellers GROUP BY m; -->
	<select id="SQL_SELECT_MONTH_SELLERS_NUMBER" resultType="map">
		<![CDATA[
			select * from(
				select date_format(td.temp_date, '%Y-%m') m, count(sr.joined_at) c
				from tempdate td left join sellers sr on 
				(date_format(td.temp_date, '%Y-%m') = date_format(sr.joined_at, '%Y-%m'))
				group by m) a;
		]]>
	</select>

</mapper>
