<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="IAdminDAO">
	
	<resultMap type="adminVO" id="adResultMap">
		<id property="adId" column="ad_id"/>
		<result property="login" column="login"/>
		<result property="password" column="password"/>
		<result property="email" column="email"/>
		<result property="phoneNumber" column="phoneNumber"/>
		<result property="notice" column="notice"/>
		<result property="createdAt" column="created_at"/>
		<result property="updatedAt" column="updated_at"/>
		<result property="loginTime" column="login_time"/>
		<result property="logoutTime" column="logout_time"/>
	</resultMap>
	
	<select id="admin_login_check" parameterType="adminVO" resultType="String">
		<![CDATA[
		select ad_id from admin where ad_id=#{adId} and password=#{password}
		]]>
	</select>
	
	<select id="select_admin" parameterType="String" resultType="adminVO">
		<![CDATA[
		select * from admin where login = #{login}
		]]>
	</select>
	
	<select id="admin_login_certification" parameterType="hashmap" resultType="map">
		<![CDATA[
		select login, cast(aes_decrypt(unhex(password), #{login}) as char(32) character set utf8) as password from foodlee_db.admin where ad_id = #{adId};
		]]>
	</select>
	
	<select id="select_admin_idby_login" parameterType="String" resultType="int">
		<![CDATA[
			select ad_id from admin where login = #{login}
		]]>
	</select>
	
	<select id="showAllMember" parameterType="memberVO" resultType="memberVO">
		<![CDATA[
		SELECT * FROM MEMBERS ORDER BY created_at desc
		]]>
	</select>
	
<!-- 	<select id="getSomething" parameterType="int" resultType="#package.#modelname"> -->
<!-- 		SELECT -->
<!-- 		columnname1, -->
<!-- 		columnname2, -->
<!-- 		columnname3 -->
<!-- 		FROM tablename1 -->
<!-- 		WHERE columnname1 = #{value} -->
<!-- 	</select> -->

<!-- 	<resultMap type="#modelname" id="YourResultSet"> -->
<!-- 		<id property="param1" column="columnname1" /> -->
<!-- 		<result property="param2" column="columnname2" /> -->
<!-- 		<result property="param3" column="columnname3" /> -->
<!-- 	</resultMap> -->

<!-- 	<select id="getAll" resultMap="YourResultSet"> -->
<!-- 		SELECT * FROM tablename1 -->
<!-- 	</select> -->

<!-- 	<insert id="insertSomething" parameterType="#modelname"> -->
<!-- 		INSERT INTO tablename1 (columnname1, columnname2, columnname3) -->
<!-- 		VALUES(#{value1},#{value2},#{value3}) -->
<!-- 	</insert> -->

<!-- 	<update id="updateSomething" parameterType="#modelname"> -->
<!-- 		UPDATE tablename1 -->
<!-- 		SET -->
<!-- 		columnname1=#{param1} -->
<!-- 		WHERE -->
<!-- 		columnname2 = #{param2} -->
<!-- 	</update> -->

<!-- 	<delete id="deleteSomething" parameterType="int"> -->
<!-- 		DELETE FROM tablename1 WHERE -->
<!-- 		columnname1 = #{param1} -->
<!-- 	</delete> -->
	<select id="SQL_SELECT_MEMBER_COUNT" resultType="int">
		<![CDATA[
			select count(*) from members
		]]>
	</select>
	
	<select id="SQL_SELECT_SELLER_COUNT" resultType="int">
		<![CDATA[
			select count(*) from sellers
		]]>
	</select>
	
	<select id="SQL_SELECT_FOODTRUCK_COUNT" resultType="int">
		<![CDATA[
			select count(*) from foodtrucks
		]]>
	</select>
	
	<select id="SQL_SELECT_MENU_COUNT" resultType="int">
		<![CDATA[
			select count(*) from menus
		]]>
	</select>
	
	<select id="SQL_SELECT_TODAY_ORDER_COUNT" resultType="int">
		<![CDATA[
			SELECT count(*) FROM orders
				WHERE IFNULL(DATE_FORMAT(order_date, '%Y-%m-%d') = CURDATE(), 0);
		]]>
	</select>
	
	<select id="SQL_SELECT_TODAY_ORDER_PRICE_SUM" resultType="int">
		<![CDATA[
			SELECT IFNULL(sum(order_price_sum), 0) FROM orders
				WHERE DATE_FORMAT(order_date, '%Y-%m-%d') = CURDATE()
		]]>
	</select>
	
	<select id="SQL_SELECT_ORDER_COUNT" resultType="int">
		<![CDATA[
			select count(*) from orders
		]]>
	</select>
	
	<select id="SQL_SELECT_ORDER_PRICE_SUM" resultType="int">
		<![CDATA[
			select sum(order_price_sum) from orders
		]]>
	</select>
	
	<select id="SQL_SELECT_MENU_CATEGORYS" resultType="int">
		<![CDATA[
			select count(CASE WHEN menu_category=1 then 1 end), count(CASE WHEN menu_category=2 then 1 end),
			count(CASE WHEN menu_category=3 then 1 end), count(CASE WHEN menu_category=4 then 1 end)
			from foodtrucks;
		]]>
	</select>

</mapper>
